/* 
* Copyright (c) 2012, Daynix Computing LTD (www.daynix.com)
* All rights reserved.
*
* Maintained by bricklets@daynix.com
*
* This file is a part of the Bricklets library, please see the wiki page
* on https://github.com/daynix/bricklets/wiki/Bricklets-library for more.
*
* This code is licensed under standard 3-clause BSD license.
* See file LICENSE supplied with this package for the full license text.
*/

#ifndef __DNX_ATOMIC_WIN_H__
#define __DNX_ATOMIC_WIN_H__

#include <windows.h>

/* do not include this file directly. use dnx_atomic.h instead */

static __inline uint32_t dnx_atomic32_get(dnx_atomic32_t *a)
{
  return *a;
}

static __inline void dnx_atomic32_set(dnx_atomic32_t *a, uint32_t val)
{
  (void)InterlockedExchange(a, val);
}

static __inline uint32_t dnx_atomic32_add(dnx_atomic32_t *a, uint32_t val)
{
  return InterlockedExchangeAdd(a, val) + val;
}

static __inline uint32_t dnx_atomic32_sub(dnx_atomic32_t *a, uint32_t val)
{
  return InterlockedExchangeAdd(a, -1 * val) - val;
}

static __inline uint32_t dnx_atomic32_inc(dnx_atomic32_t *a)
{
  return InterlockedIncrement(a);
}

static __inline uint32_t dnx_atomic32_dec(dnx_atomic32_t *a)
{
  return InterlockedDecrement(a);
}

#endif

